//
//  sound.h
//  PipeSpin
//
//  Created by Dave on 23/05/2021.
//

#ifndef SOUND_H
#define SOUND_H

//MaxMod - number of channels and mixing sample rate
#define mmNumChans 8
#define mmRate 21 //16/18/21 KHz
#define mmMixLen(rate) mmML(rate)
#define mmML(rate) MM_MIXLEN_##rate##KHZ //have to have second level of indirection so mmRate macro is expanded
#define mmMix(rate) mmM(rate)
#define mmM(rate) MM_MIX_##rate##KHZ

// libgba headers
#include <gba_sound.h>
#include <maxmod.h>

// c headers
#include <stdlib.h>

// local headers
#include "config.h"

#ifdef DEBUGGERY
#include "mgba.h"
#endif

//---------------------------------------------------------------------------------
// header for binary data generated by bin2o macro in makefile
//---------------------------------------------------------------------------------
#include "soundbank.h"
#include "soundbank_bin.h"

struct psgSound {
    int channel;
    u16 L;
    u16 H;
    u16 X;
};

extern const struct psgSound descend;
extern const struct psgSound ascend;
extern const struct psgSound turn1;
extern const struct psgSound turn2;
extern const struct psgSound turn3;
extern const struct psgSound buzz1;
extern const struct psgSound buzz2;
extern const struct psgSound levelSound;
extern const struct psgSound moveTick;
extern const struct psgSound addPipeSound;
extern const struct psgSound removePipeSound;
extern const struct psgSound flipSound;
extern const struct psgSound gameOverSound1;
extern const struct psgSound gameOverSound2;

extern int musicVolume, sfxVolume;
extern bool pauseMusicWhenPaused;

//public functions
void soundEnable ();
void setVolume ();
void playSound (struct psgSound sound);
void startSoundMM ();

#endif // SOUND_H
